{"remainingRequest":"/Users/lichongbing/Downloads/vuepress-starter/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/lichongbing/Downloads/vuepress-starter/docs/.vuepress/vuepress-plugin-code-style-mac/highlight.js/lib/highlight.js","dependencies":[{"path":"/Users/lichongbing/Downloads/vuepress-starter/docs/.vuepress/vuepress-plugin-code-style-mac/highlight.js/lib/highlight.js","mtime":1629789283203},{"path":"/Users/lichongbing/Downloads/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1649504916945},{"path":"/Users/lichongbing/Downloads/vuepress-starter/node_modules/babel-loader/lib/index.js","mtime":1649504916858}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/lichongbing/Downloads/vuepress-starter/docs/.vuepress/vuepress-plugin-code-style-mac/highlight.js/lib/highlight.js"],"names":["factory","globalObject","window","self","exports","nodeType","hljs","define","amd","showedUpgradeWarning","ArrayProto","objectKeys","Object","keys","languages","create","aliases","SAFE_MODE","noHighlightRe","languagePrefixRe","fixMarkupRe","API_REPLACES","spanEndTag","LANGUAGE_NOT_FOUND","options","hideUpgradeWarningAcceptNoSupportOrSecurityUpdates","classPrefix","tabReplace","useBR","undefined","COMMON_KEYWORDS","split","escape","value","replace","tag","node","nodeName","toLowerCase","testRe","re","lexeme","match","exec","index","isNotHighlighted","language","test","blockLanguage","block","i","length","_class","classes","className","parentNode","getLanguage","console","warn","inherit","parent","key","result","objects","Array","prototype","slice","call","arguments","forEach","obj","nodeStream","_nodeStream","offset","child","firstChild","nextSibling","nodeValue","push","event","mergeStreams","original","highlighted","processed","nodeStack","selectStream","open","attr_str","a","map","attributes","join","close","render","stream","substring","reverse","splice","pop","substr","dependencyOnParent","mode","endsWithParent","starts","expand_or_clone_mode","variants","cached_variants","variant","isFrozen","restoreLanguageApi","langApiRestored","contains","concat","compileKeywords","rawKeywords","case_insensitive","compiled_keywords","splitAndCompile","str","keyword","pair","scoreForKeyword","providedScore","Number","commonKeyword","word","indexOf","compileLanguage","reStr","source","langRe","global","RegExp","reCountMatchGroups","toString","joinRe","regexps","separator","backreferenceRe","numCaptures","ret","String","buildModeRegex","matchIndexes","matcherRe","regexes","matcher","matchAt","addRule","rule","regex","term","beginKeywords","begin","terminator_end","illegal","terminators","el","lastIndex","s","type","extra","compileMode","compiled","keywords","lexemesRe","lexemes","beginRe","endSameAsBegin","end","endRe","illegalRe","relevance","apply","c","Error","filter","hideUpgradeWarning","process","env","highlight","languageName","code","ignore_illegals","continuation","log","codeToHighlight","escapeRe","endOfMode","endsParent","keywordMatch","match_str","hasOwnProperty","buildSpan","insideSpan","leaveOpen","noPrefix","openSpan","closeSpan","processKeywords","keyword_match","last_index","top","mode_buffer","processSubLanguage","explicit","subLanguage","continuations","highlightAuto","processBuffer","startNewMode","doBeginMatch","new_mode","skip","excludeBegin","returnBegin","doEndMatch","matchPlusRemainder","end_mode","origin","returnEnd","excludeEnd","lastMatch","processLexeme","text_before_match","error","current","count","err","message","errorRaised","languageSubset","second_best","autoDetection","name","fixMarkup","p1","buildClassName","prevClassName","currentLang","resultLang","trim","highlightBlock","originalStream","resultNode","text","document","createElement","innerHTML","textContent","configure","user_options","initHighlighting","called","blocks","querySelectorAll","initHighlightingOnLoad","addEventListener","PLAINTEXT_LANGUAGE","disableAutodetect","registerLanguage","lang","rawDefinition","bind","alias","listLanguages","requireLanguage","debugMode","IDENT_RE","UNDERSCORE_IDENT_RE","NUMBER_RE","C_NUMBER_RE","BINARY_NUMBER_RE","RE_STARTERS_RE","BACKSLASH_ESCAPE","APOS_STRING_MODE","QUOTE_STRING_MODE","PHRASAL_WORDS_MODE","COMMENT","inherits","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","HASH_COMMENT_MODE","NUMBER_MODE","C_NUMBER_MODE","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","REGEXP_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","METHOD_GUARD","constants","deepFreeze","o","freeze","objIsFunction","getOwnPropertyNames","prop"],"mappings":"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","sourcesContent":["/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window ||\n                     typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  // `nodeType` is checked to ensure that `exports` is not a HTML element.\n  if(typeof exports !== 'undefined' && !exports.nodeType) {\n    factory(exports);\n  } else if(globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define([], function() {\n        return globalObject.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n  var showedUpgradeWarning = false;\n\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = Object.create(null),\n      aliases   = Object.create(null);\n\n  // safe/production mode - swallows more errors, tries to keep running\n  // even if a single syntax or parse hits a fatal error\n  var SAFE_MODE = true;\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe      = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  // The object will be assigned by the build tool. It used to synchronize API\n  // of external language files with minified version of the highlight.js library.\n  var API_REPLACES;\n\n  var spanEndTag = '</span>';\n  var LANGUAGE_NOT_FOUND = \"Could not find the language '{}', did you forget to load/include a language module?\";\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    hideUpgradeWarningAcceptNoSupportOrSecurityUpdates: false,\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n  // keywords that should have no default relevance value\n  var COMMON_KEYWORDS = 'of and for in not or if then'.split(' ');\n\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      var language = getLanguage(match[1]);\n      if (!language) {\n        console.warn(LANGUAGE_NOT_FOUND.replace(\"{}\", match[1]));\n        console.warn(\"Falling back to no-highlight mode for this block.\", block);\n      }\n      return language ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i];\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  /**\n   * performs a shallow merge of multiple objects into one\n   *\n   * @arguments list of objects with properties to merge\n   * @returns a single new object\n   */\n  function inherit(parent) {  // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent)\n      result[key] = parent[key];\n    objects.forEach(function(obj) {\n      for (key in obj)\n        result[key] = obj[key];\n    });\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {\n        return ' ' + a.nodeName + '=\"' + escape(a.value).replace(/\"/g, '&quot;') + '\"';\n      }\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function dependencyOnParent(mode) {\n    if (!mode) return false;\n\n    return mode.endsWithParent || dependencyOnParent(mode.starts);\n  }\n\n  function expand_or_clone_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function(variant) {\n        return inherit(mode, {variants: null}, variant);\n      });\n    }\n\n    // EXPAND\n    // if we have variants then essentially \"replace\" the mode with the variants\n    // this happens in compileMode, where this function is called from\n    if (mode.cached_variants)\n      return mode.cached_variants;\n\n    // CLONE\n    // if we have dependencies on parents then we need a unique\n    // instance of ourselves, so we can be reused with many\n    // different parents without issue\n    if (dependencyOnParent(mode))\n      return [inherit(mode, { starts: mode.starts ? inherit(mode.starts) : null })];\n\n    if (Object.isFrozen(mode))\n      return [inherit(mode)];\n\n    // no special dependency issues, just return ourselves\n    return [mode];\n  }\n\n  function restoreLanguageApi(obj) {\n    if(API_REPLACES && !obj.langApiRestored) {\n      obj.langApiRestored = true;\n      for(var key in API_REPLACES) {\n        if (obj[key]) {\n          obj[API_REPLACES[key]] = obj[key];\n        }\n      }\n      (obj.contains || []).concat(obj.variants || []).forEach(restoreLanguageApi);\n    }\n  }\n\n  function compileKeywords(rawKeywords, case_insensitive) {\n      var compiled_keywords = {};\n\n      if (typeof rawKeywords === 'string') { // string\n        splitAndCompile('keyword', rawKeywords);\n      } else {\n        objectKeys(rawKeywords).forEach(function (className) {\n          splitAndCompile(className, rawKeywords[className]);\n        });\n      }\n    return compiled_keywords;\n\n    // ---\n\n    function splitAndCompile(className, str) {\n      if (case_insensitive) {\n        str = str.toLowerCase();\n      }\n      str.split(' ').forEach(function(keyword) {\n        var pair = keyword.split('|');\n        compiled_keywords[pair[0]] = [className, scoreForKeyword(pair[0], pair[1])];\n      });\n    }\n  }\n\n  function scoreForKeyword(keyword, providedScore) {\n    // manual scores always win over common keywords\n    // so you can force a score of 1 if you really insist\n    if (providedScore)\n      return Number(providedScore);\n\n    return commonKeyword(keyword) ? 0 : 1;\n  }\n\n  function commonKeyword(word) {\n    return COMMON_KEYWORDS.indexOf(word.toLowerCase()) != -1;\n  }\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function reCountMatchGroups(re) {\n      return (new RegExp(re.toString() + '|')).exec('').length - 1;\n    }\n\n    // joinRe logically computes regexps.join(separator), but fixes the\n    // backreferences so they continue to match.\n    // it also places each individual regular expression into it's own\n    // match group, keeping track of the sequencing of those match groups\n    // is currently an exercise for the caller. :-)\n    function joinRe(regexps, separator) {\n      // backreferenceRe matches an open parenthesis or backreference. To avoid\n      // an incorrect parse, it additionally matches the following:\n      // - [...] elements, where the meaning of parentheses and escapes change\n      // - other escape sequences, so we do not misparse escape sequences as\n      //   interesting elements\n      // - non-matching or lookahead parentheses, which do not capture. These\n      //   follow the '(' with a '?'.\n      var backreferenceRe = /\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./;\n      var numCaptures = 0;\n      var ret = '';\n      for (var i = 0; i < regexps.length; i++) {\n        numCaptures += 1;\n        var offset = numCaptures;\n        var re = reStr(regexps[i]);\n        if (i > 0) {\n          ret += separator;\n        }\n        ret += \"(\";\n        while (re.length > 0) {\n          var match = backreferenceRe.exec(re);\n          if (match == null) {\n            ret += re;\n            break;\n          }\n          ret += re.substring(0, match.index);\n          re = re.substring(match.index + match[0].length);\n          if (match[0][0] == '\\\\' && match[1]) {\n            // Adjust the backreference.\n            ret += '\\\\' + String(Number(match[1]) + offset);\n          } else {\n            ret += match[0];\n            if (match[0] == '(') {\n              numCaptures++;\n            }\n          }\n        }\n        ret += \")\";\n      }\n      return ret;\n    }\n\n    function buildModeRegex(mode) {\n\n      var matchIndexes = {};\n      var matcherRe;\n      var regexes = [];\n      var matcher = {};\n      var matchAt = 1;\n\n      function addRule(rule, regex) {\n        matchIndexes[matchAt] = rule;\n        regexes.push([rule, regex]);\n        matchAt += reCountMatchGroups(regex) + 1;\n      }\n\n      var term;\n      for (var i=0; i < mode.contains.length; i++) {\n        var re;\n        term = mode.contains[i];\n        if (term.beginKeywords) {\n          re = '\\\\.?(?:' + term.begin + ')\\\\.?';\n        } else {\n          re = term.begin;\n        }\n        addRule(term, re);\n      }\n      if (mode.terminator_end)\n        addRule(\"end\", mode.terminator_end);\n      if (mode.illegal)\n        addRule(\"illegal\", mode.illegal);\n\n      var terminators = regexes.map(function(el) { return el[1]; });\n      matcherRe = langRe(joinRe(terminators, '|'), true);\n\n      matcher.lastIndex = 0;\n      matcher.exec = function(s) {\n        var rule;\n\n        if( regexes.length === 0) return null;\n\n        matcherRe.lastIndex = matcher.lastIndex;\n        var match = matcherRe.exec(s);\n        if (!match) { return null; }\n\n        for(var i = 0; i<match.length; i++) {\n          if (match[i] != undefined && matchIndexes[\"\" +i] != undefined ) {\n            rule = matchIndexes[\"\"+i];\n            break;\n          }\n        }\n\n        // illegal or end match\n        if (typeof rule === \"string\") {\n          match.type = rule;\n          match.extra = [mode.illegal, mode.terminator_end];\n        } else {\n          match.type = \"begin\";\n          match.rule = rule;\n        }\n        return match;\n      };\n\n      return matcher;\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords)\n        mode.keywords = compileKeywords(mode.keywords, language.case_insensitive);\n\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (mode.endSameAsBegin)\n          mode.end = mode.begin;\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function(c) {\n        return expand_or_clone_mode(c === 'self' ? mode : c);\n      }));\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      mode.terminators = buildModeRegex(mode);\n    }\n\n    // self is not valid at the top-level\n    if (language.contains && language.contains.indexOf('self') != -1) {\n      if (!SAFE_MODE) {\n        throw new Error(\"ERR: contains `self` is not supported at the top-level of a language.  See documentation.\")\n      } else {\n        // silently remove the broken rule (effectively ignoring it), this has historically\n        // been the behavior in the past, so this removal preserves compatibility with broken\n        // grammars when running in Safe Mode\n        language.contains = language.contains.filter(function(mode) { return mode != 'self'; });\n      }\n    }\n    compileMode(language);\n  }\n\n  function hideUpgradeWarning() {\n    if (options.hideUpgradeWarningAcceptNoSupportOrSecurityUpdates)\n      return true;\n\n    if (typeof process === \"object\" && typeof process.env === \"object\" && process.env[\"HLJS_HIDE_UPGRADE_WARNING\"])\n      return true;\n  }\n\n  /**\n   * Core highlighting function.\n   *\n   * @param {string} languageName - the language to use for highlighting\n   * @param {string} code - the code to highlight\n   * @param {boolean} ignore_illegals - whether to ignore illegal matches, default is to bail\n   * @param {array<mode>} continuation - array of continuation modes\n   *\n   * @returns an object that represents the result\n   * @property {string} language - the language name\n   * @property {number} relevance - the relevance score\n   * @property {string} value - the highlighted HTML code\n   * @property {mode} top - top of the current mode stack\n   * @property {boolean} illegal - indicates whether any illegal matches were found\n  */\n  function highlight(languageName, code, ignore_illegals, continuation) {\n    if (!hideUpgradeWarning()) {\n      if (!showedUpgradeWarning) {\n        showedUpgradeWarning = true;\n        console.log(\n          \"Version 9 of Highlight.js has reached EOL and is no longer supported.\\n\" +\n          \"Please upgrade or ask whatever dependency you are using to upgrade.\\n\" +\n          \"https://github.com/highlightjs/highlight.js/issues/2877\"\n        );\n      }\n    }\n\n    var codeToHighlight = code;\n\n    function escapeRe(value) {\n      return new RegExp(value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(className, insideSpan, leaveOpen, noPrefix) {\n      if (!leaveOpen && insideSpan === '') return '';\n      if (!className) return insideSpan;\n\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : spanEndTag;\n\n      openSpan += className + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords)\n        return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Use case in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n\n    function doBeginMatch(match) {\n      var lexeme = match[0];\n      var new_mode = match.rule;\n\n      if (new_mode && new_mode.endSameAsBegin) {\n        new_mode.endRe = escapeRe( lexeme );\n      }\n\n      if (new_mode.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (new_mode.excludeBegin) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n          mode_buffer = lexeme;\n        }\n      }\n      startNewMode(new_mode);\n      return new_mode.returnBegin ? 0 : lexeme.length;\n    }\n\n    function doEndMatch(match) {\n      var lexeme = match[0];\n      var matchPlusRemainder = codeToHighlight.substr(match.index);\n      var end_mode = endOfMode(top, matchPlusRemainder);\n      if (!end_mode) { return; }\n\n      var origin = top;\n      if (origin.skip) {\n        mode_buffer += lexeme;\n      } else {\n        if (!(origin.returnEnd || origin.excludeEnd)) {\n          mode_buffer += lexeme;\n        }\n        processBuffer();\n        if (origin.excludeEnd) {\n          mode_buffer = lexeme;\n        }\n      }\n      do {\n        if (top.className) {\n          result += spanEndTag;\n        }\n        if (!top.skip && !top.subLanguage) {\n          relevance += top.relevance;\n        }\n        top = top.parent;\n      } while (top !== end_mode.parent);\n      if (end_mode.starts) {\n        if (end_mode.endSameAsBegin) {\n          end_mode.starts.endRe = end_mode.endRe;\n        }\n        startNewMode(end_mode.starts);\n      }\n      return origin.returnEnd ? 0 : lexeme.length;\n    }\n\n    var lastMatch = {};\n    function processLexeme(text_before_match, match) {\n\n      var lexeme = match && match[0];\n\n      // add non-matched text to the current mode buffer\n      mode_buffer += text_before_match;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      // we've found a 0 width match and we're stuck, so we need to advance\n      // this happens when we have badly behaved rules that have optional matchers to the degree that\n      // sometimes they can end up matching nothing at all\n      // Ref: https://github.com/highlightjs/highlight.js/issues/2140\n      if (lastMatch.type==\"begin\" && match.type==\"end\" && lastMatch.index == match.index && lexeme === \"\") {\n        // spit the \"skipped\" character that our regex choked on back into the output sequence\n        mode_buffer += codeToHighlight.slice(match.index, match.index + 1);\n        return 1;\n      }\n\n      // edge case for when illegal matches $ (end of line) which is technically\n      // a 0 width match but not a begin/end match so it's not caught by the\n      // first handler (when ignoreIllegals is true)\n      // https://github.com/highlightjs/highlight.js/issues/2522\n      if (lastMatch.type===\"illegal\" && lexeme === \"\") {\n        mode_buffer += codeToHighlight.slice(match.index, match.index + 1);\n        return 1;\n      }\n\n      lastMatch = match;\n\n      if (match.type===\"begin\") {\n        return doBeginMatch(match);\n      } else if (match.type===\"illegal\" && !ignore_illegals) {\n        // illegal match, we do not continue processing\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n      } else if (match.type===\"end\") {\n        var processed = doEndMatch(match);\n        if (processed != undefined)\n          return processed;\n      }\n\n      /*\n      Why might be find ourselves here?  Only one occasion now.  An end match that was\n      triggered but could not be completed.  When might this happen?  When an `endSameasBegin`\n      rule sets the end rule to a specific match.  Since the overall mode termination rule that's\n      being used to scan the text isn't recompiled that means that any match that LOOKS like\n      the end (but is not, because it is not an exact match to the beginning) will\n      end up here.  A definite end match, but when `doEndMatch` tries to \"reapply\"\n      the end rule and fails to match, we wind up here, and just silently ignore the end.\n\n      This causes no real harm other than stopping a few times too many.\n      */\n\n      mode_buffer += lexeme;\n      return lexeme.length;\n    }\n\n    var language = getLanguage(languageName);\n    if (!language) {\n      console.error(LANGUAGE_NOT_FOUND.replace(\"{}\", languageName));\n      throw new Error('Unknown language: \"' + languageName + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(codeToHighlight);\n        if (!match)\n          break;\n        count = processLexeme(codeToHighlight.substring(index, match.index), match);\n        index = match.index + count;\n      }\n      processLexeme(codeToHighlight.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        illegal:false,\n        language: languageName,\n        top: top\n      };\n    } catch (err) {\n      if (err.message && err.message.indexOf('Illegal') !== -1) {\n        return {\n          illegal: true,\n          relevance: 0,\n          value: escape(codeToHighlight)\n        };\n      } else if (SAFE_MODE) {\n        return {\n          relevance: 0,\n          value: escape(codeToHighlight),\n          language: languageName,\n          top: top,\n          errorRaised: err\n        };\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(code, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(code)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {\n      var current = highlight(name, code, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    if (!(options.tabReplace || options.useBR)) {\n      return value;\n    }\n\n    return value.replace(fixMarkupRe, function(match, p1) {\n        if (options.useBR && match === '\\n') {\n          return '<br>';\n        } else if (options.tabReplace) {\n          return p1.replace(/\\t/g, options.tabReplace);\n        }\n        return '';\n    });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language))\n        return;\n\n    if (options.useBR) {\n      node = document.createElement('div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElement('div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    window.addEventListener('DOMContentLoaded', initHighlighting, false);\n    window.addEventListener('load', initHighlighting, false);\n  }\n\n  var PLAINTEXT_LANGUAGE = { disableAutodetect: true };\n\n  function registerLanguage(name, language) {\n    var lang;\n    try { lang = language(hljs); }\n    catch (error) {\n      console.error(\"Language definition for '{}' could not be registered.\".replace(\"{}\", name));\n      // hard or soft error\n      if (!SAFE_MODE) { throw error; } else { console.error(error); }\n      // languages that have serious errors are replaced with essentially a\n      // \"plaintext\" stand-in so that the code blocks will still get normal\n      // css classes applied to them - and one bad language won't break the\n      // entire highlighter\n      lang = PLAINTEXT_LANGUAGE;\n    }\n    languages[name] = lang;\n    restoreLanguageApi(lang);\n    lang.rawDefinition = language.bind(null,hljs);\n\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  /*\n    intended usage: When one language truly requires another\n\n    Unlike `getLanguage`, this will throw when the requested language\n    is not available.\n  */\n  function requireLanguage(name) {\n    var lang = getLanguage(name);\n    if (lang) { return lang; }\n\n    var err = new Error('The \\'{}\\' language is required, but not loaded.'.replace('{}',name));\n    throw err;\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.requireLanguage = requireLanguage;\n  hljs.autoDetection = autoDetection;\n  hljs.inherit = inherit;\n  hljs.debugMode = function() { SAFE_MODE = false; }\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  var constants = [\n    hljs.BACKSLASH_ESCAPE,\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    hljs.PHRASAL_WORDS_MODE,\n    hljs.COMMENT,\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.HASH_COMMENT_MODE,\n    hljs.NUMBER_MODE,\n    hljs.C_NUMBER_MODE,\n    hljs.BINARY_NUMBER_MODE,\n    hljs.CSS_NUMBER_MODE,\n    hljs.REGEXP_MODE,\n    hljs.TITLE_MODE,\n    hljs.UNDERSCORE_TITLE_MODE,\n    hljs.METHOD_GUARD\n  ]\n  constants.forEach(function(obj) { deepFreeze(obj); });\n\n  // https://github.com/substack/deep-freeze/blob/master/index.js\n  function deepFreeze (o) {\n    Object.freeze(o);\n\n    var objIsFunction = typeof o === 'function';\n\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n      if (o.hasOwnProperty(prop)\n      && o[prop] !== null\n      && (typeof o[prop] === \"object\" || typeof o[prop] === \"function\")\n      // IE11 fix: https://github.com/highlightjs/highlight.js/issues/2318\n      // TODO: remove in the future\n      && (objIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true)\n      && !Object.isFrozen(o[prop])) {\n        deepFreeze(o[prop]);\n      }\n    });\n\n    return o;\n  };\n\n\n  return hljs;\n}));\n"]}]}