{"remainingRequest":"/Users/lichongbing/Downloads/vuepress-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lichongbing/Downloads/vuepress-starter/docs/.vuepress/vuepress-plugin-code-style-mac/code.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/lichongbing/Downloads/vuepress-starter/docs/.vuepress/vuepress-plugin-code-style-mac/code.vue","mtime":1649508531134},{"path":"/Users/lichongbing/Downloads/vuepress-starter/node_modules/css-loader/dist/cjs.js","mtime":1649504917183},{"path":"/Users/lichongbing/Downloads/vuepress-starter/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1649504917690},{"path":"/Users/lichongbing/Downloads/vuepress-starter/node_modules/postcss-loader/src/index.js","mtime":1649504917443},{"path":"/Users/lichongbing/Downloads/vuepress-starter/node_modules/cache-loader/dist/cjs.js","mtime":1649504916945},{"path":"/Users/lichongbing/Downloads/vuepress-starter/node_modules/vue-loader/lib/index.js","mtime":1649504917690}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvZGUtY29weS1idG4gewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBib3R0b206IDEwcHg7CiAgcmlnaHQ6IDcuNXB4OwogIG9wYWNpdHk6IDAuNzU7CiAgY3Vyc29yOiBwb2ludGVyOwogIGZvbnQtc2l6ZTogMTRweDsKfQoKLmNvZGUtY29weS1idG46aG92ZXIgewogIG9wYWNpdHk6IDE7Cn0K"},{"version":3,"sources":["code.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"code.vue","sourceRoot":"docs/.vuepress/vuepress-plugin-code-style-mac","sourcesContent":["<!--\n  - name: code\n  - description: add\n  - author: lichongbing\n  - date:  2022/4/9 8:11 下午\n  - version: 1.0\n  -->\n<template>\n  <div class=\"detail-content\">\n    <span class=\"code-copy-btn\" @click=\"copyToClipboard\">{{ buttonText }}</span>\n    <div class=\"article-content\" v-html=\"markdownHtml\"></div>\n  </div>\n</template>\n\n<script>\nimport hljs from 'highlight.js/lib/highlight'\nimport javascript from 'highlight.js/lib/languages/javascript'\nimport MarkdownIt from 'markdown-it'\nimport markdownItTocAndAnchor from 'markdown-it-toc-and-anchor'\n\nhljs.registerLanguage('javascript', javascript)\nlet md = new MarkdownIt({\n  html: true,\n  linkify: true,\n  typographer: true,\n  highlight: function (str, lang) {\n    if (lang && hljs.getLanguage(lang)) {\n      try {\n        return '<pre class=\"hljs\"><code>' +\n            hljs.highlight(lang, str, true).value +\n            '</code></pre>'\n      } catch (__) {\n      }\n    }\n\n    return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>'\n  }\n})\nexport default {\n  data() {\n    return {\n      buttonText: copybuttonText,\n      markdownHtml: '',\n    }\n  },\n  mounted() {\n    this.getMarkdownHtml()\n  },\n  methods: {\n    getMarkdownHtml() {\n      let res\n      res = md.use(markdownItTocAndAnchor).render(this.code)\n      this.$nextTick(() => {\n        this.markdownHtml = res\n      })\n    },\n    copyToClipboard(el) {\n      this.setClipboard(this.code, this.setText);\n    },\n    setClipboard(code, cb) {\n      if (navigator.clipboard) {\n        navigator.clipboard.writeText(code).then(\n            cb,\n            () => {\n            }\n        )\n      } else {\n        let copyelement = document.createElement('textarea')\n        document.body.appendChild(copyelement)\n        copyelement.value = code\n        copyelement.select()\n        document.execCommand('Copy')\n        copyelement.remove()\n        cb()\n      }\n    },\n    setText() {\n      this.buttonText = copiedButtonText\n\n      setTimeout(() => {\n        this.buttonText = copybuttonText\n      }, 1000)\n    }\n  }\n\n}\n</script>\n\n<style>\n\n.code-copy-btn {\n  position: absolute;\n  bottom: 10px;\n  right: 7.5px;\n  opacity: 0.75;\n  cursor: pointer;\n  font-size: 14px;\n}\n\n.code-copy-btn:hover {\n  opacity: 1;\n}\n</style>\n"]}]}